/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.4.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.ing.stock.exchanger.api;

import com.ing.stock.exchanger.models.OrderReq;
import com.ing.stock.exchanger.models.OrderRes;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", comments = "Generator version: 7.4.0")
@Validated
@Tag(name = "stockExchange", description = "the stockExchange API")
@RequestMapping("/ingx/stock/exchanger/api")
public interface CreateOrderApi {

    /**
     * POST /createOrder : Create a new order
     *
     * @param orderReq  (required)
     * @return Created (status code 200)
     */
    @Operation(
        operationId = "createOrderPost",
        summary = "Create a new order",
        tags = { "stockExchange" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Created", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = OrderRes.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/createOrder",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    ResponseEntity<OrderRes> createOrderPost(
        @Parameter(name = "OrderReq", description = "", required = true) @Valid @RequestBody OrderReq orderReq
    );

}
